Environment Variables Debug: {
  NODE_ENV: 'production',
  MONITORING_ENABLED: 'true',
  NEXT_PUBLIC_URL: 'https://amore.build'
}
[Tweet Storage] Getting cached tweets: {
  type: 'current',
  timestamp: '2025-02-25T23:41:37.559Z',
  step: 'start'
}
[Tweet Storage] No active cache, fetching all tweets: {
  type: 'current',
  timestamp: '2025-02-25T23:41:37.664Z',
  step: 'fallback'
}
[Tweet Storage] Fetched all tweets: { count: 18, timestamp: '2025-02-25T23:41:37.701Z', step: 'complete' }
[Twitter API] Initializing read-only client...
[Twitter API] Credentials check: {
  hasApiKey: true,
  hasApiSecret: true,
  hasAccessToken: true,
  hasAccessSecret: true
}
[Twitter API] Using twitter-api-v2 version: 1.19.0
[Twitter API] Credentials verified successfully
[Twitter API] Client initialized successfully
[Twitter Storage] Checking if request can be made: {
  endpoint: 'tweets/search/recent',
  timestamp: '2025-02-25T23:41:37.870Z',
  step: 'start-check'
}
[Twitter Storage] Fetching rate limit: {
  endpoint: 'tweets/search/recent',
  timestamp: '2025-02-25T23:41:37.871Z',
  step: 'pre-fetch'
}
[Twitter Storage] Retrieved rate limit: {
  endpoint: 'tweets/search/recent',
  resetAt: '2025-02-25T23:39:07.383Z',
  remaining: 99,
  timestamp: '2025-02-25T23:41:37.889Z',
  durationMs: 18,
  step: 'post-fetch-found'
}
[Twitter Storage] Rate limit reset time passed: {
  endpoint: 'tweets/search/recent',
  resetAt: '2025-02-25T23:39:07.383Z',
  now: '2025-02-25T23:41:37.890Z',
  remaining: 99,
  durationMs: 20,
  step: 'check-reset-passed'
}
[Twitter Storage] Resetting rate limit after expiration: {
  endpoint: 'tweets/search/recent',
  oldResetAt: '2025-02-25T23:39:07.383Z',
  newResetAt: '2025-02-25T23:56:37.890Z',
  oldRemaining: 99,
  newRemaining: 99,
  step: 'reset-rate-limit'
}
[Twitter Storage] Updating rate limit: {
  endpoint: 'tweets/search/recent',
  resetAt: '2025-02-25T23:56:37.890Z',
  remaining: 99,
  timestamp: '2025-02-25T23:41:37.890Z',
  step: 'pre-update'
}
[Twitter Storage] Rate limit updated: {
  endpoint: 'tweets/search/recent',
  resetAt: '2025-02-25T23:56:37.890Z',
  remaining: 99,
  durationMs: 24,
  step: 'post-update'
}
[Twitter Storage] Updating rate limit: {
  endpoint: 'tweets/search/recent',
  resetAt: '2025-02-25T23:56:37.000Z',
  remaining: 0,
  timestamp: '2025-02-25T23:41:38.136Z',
  step: 'pre-update'
}
[Twitter Storage] Rate limit updated: {
  endpoint: 'tweets/search/recent',
  resetAt: '2025-02-25T23:56:37.000Z',
  remaining: 0,
  durationMs: 12,
  step: 'post-update'
}
[Twitter Storage] Caching 22 tweets of type current
[Twitter Storage] Starting entity cleanup: { timestamp: '2025-02-25T23:41:38.150Z', step: 'start' }
[Twitter Storage] Found tweets to clean: {
  tweetCount: 18,
  timestamp: '2025-02-25T23:41:38.174Z',
  step: 'tweets-found'
}
[Twitter Storage] Entity cleanup complete: {
  totalTweets: 18,
  totalDuplicatesRemoved: 0,
  timestamp: '2025-02-25T23:41:38.174Z',
  step: 'complete'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1894492206028701779"
  },
  create: {
    id: "1894492206028701779",
    text: "@techhsiren https://t.co/IqkyJzkclD",
    createdAt: new Date("2025-02-25T20:58:34.000Z"),
    publicMetrics: {
      retweet_count: 0,
      reply_count: 0,
      like_count: 1,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 19
    },
    entities: {
      create: [
        {
          type: "url",
          text: "https://t.co/IqkyJzkclD",
          url: "https://t.co/IqkyJzkclD",
          expandedUrl: "https://x.com/vincit_amore/status/1894489618533302727",
          displayUrl: "x.com/vincit_amore/s…",
          tweet: {
            connect: {
              id: "1894492206028701779"
            }
          },
          metadata: {
            images: []
          }
        }
      ]
    },
+   authorId: String
  },
  update: {
    id: "1894492206028701779",
    text: "@techhsiren https://t.co/IqkyJzkclD",
    createdAt: new Date("2025-02-25T20:58:34.000Z"),
    publicMetrics: {
      retweet_count: 0,
      reply_count: 0,
      like_count: 1,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 19
    },
    entities: {
      deleteMany: {},
      create: [
        {
          type: "url",
          text: "https://t.co/IqkyJzkclD",
          url: "https://t.co/IqkyJzkclD",
          expandedUrl: "https://x.com/vincit_amore/status/1894489618533302727",
          displayUrl: "x.com/vincit_amore/s…",
          tweet: {
            connect: {
              id: "1894492206028701779"
            }
          },
          metadata: {
            images: []
          }
        }
      ]
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1894492206028701779',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894492206028701779"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894492206028701779",\n' +
    '    text: "@techhsiren https://t.co/IqkyJzkclD",\n' +
    '    createdAt: new Date("2025-02-25T20:58:34.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 0,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 19\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/IqkyJzkclD",\n' +
    '          url: "https://t.co/IqkyJzkclD",\n' +
    '          expandedUrl: "https://x.com/vincit_amore/status/1894489618533302727",\n' +
    '          displayUrl: "x.com/vincit_amore/s…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894492206028701779"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894492206028701779",\n' +
    '    text: "@techhsiren https://t.co/IqkyJzkclD",\n' +
    '    createdAt: new Date("2025-02-25T20:58:34.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 0,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 19\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/IqkyJzkclD",\n' +
    '          url: "https://t.co/IqkyJzkclD",\n' +
    '          expandedUrl: "https://x.com/vincit_amore/status/1894489618533302727",\n' +
    '          displayUrl: "x.com/vincit_amore/s…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894492206028701779"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894492206028701779"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894492206028701779",\n' +
    '    text: "@techhsiren https://t.co/IqkyJzkclD",\n' +
    '    createdAt: new Date("2025-02-25T20:58:34.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 0,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 19\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/IqkyJzkclD",\n' +
    '          url: "https://t.co/IqkyJzkclD",\n' +
    '          expandedUrl: "https://x.com/vincit_amore/status/1894489618533302727",\n' +
    '          displayUrl: "x.com/vincit_amore/s…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894492206028701779"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894492206028701779",\n' +
    '    text: "@techhsiren https://t.co/IqkyJzkclD",\n' +
    '    createdAt: new Date("2025-02-25T20:58:34.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 0,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 19\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/IqkyJzkclD",\n' +
    '          url: "https://t.co/IqkyJzkclD",\n' +
    '          expandedUrl: "https://x.com/vincit_amore/status/1894489618533302727",\n' +
    '          displayUrl: "x.com/vincit_amore/s…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894492206028701779"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1894470464317042817"
  },
  create: {
    id: "1894470464317042817",
    text: "@LocBibliophilia @tenobrus Fair enough, being clockwork orange'ed would fuck you up no matter what it is tbh",
    createdAt: new Date("2025-02-25T19:32:10.000Z"),
    publicMetrics: {
      retweet_count: 0,
      reply_count: 1,
      like_count: 1,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 12
    },
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1894470464317042817",
    text: "@LocBibliophilia @tenobrus Fair enough, being clockwork orange'ed would fuck you up no matter what it is tbh",
    createdAt: new Date("2025-02-25T19:32:10.000Z"),
    publicMetrics: {
      retweet_count: 0,
      reply_count: 1,
      like_count: 1,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 12
    },
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1894470464317042817',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894470464317042817"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894470464317042817",\n' +
    `    text: "@LocBibliophilia @tenobrus Fair enough, being clockwork orange'ed would fuck you up no matter what it is tbh",\n` +
    '    createdAt: new Date("2025-02-25T19:32:10.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 12\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894470464317042817",\n' +
    `    text: "@LocBibliophilia @tenobrus Fair enough, being clockwork orange'ed would fuck you up no matter what it is tbh",\n` +
    '    createdAt: new Date("2025-02-25T19:32:10.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 12\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894470464317042817"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894470464317042817",\n' +
    `    text: "@LocBibliophilia @tenobrus Fair enough, being clockwork orange'ed would fuck you up no matter what it is tbh",\n` +
    '    createdAt: new Date("2025-02-25T19:32:10.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 12\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894470464317042817",\n' +
    `    text: "@LocBibliophilia @tenobrus Fair enough, being clockwork orange'ed would fuck you up no matter what it is tbh",\n` +
    '    createdAt: new Date("2025-02-25T19:32:10.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 1,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 12\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1894468629502050583"
  },
  create: {
    id: "1894468629502050583",
    text: "@LocBibliophilia @tenobrus Well if it's stimulating in it's elegance and erudition, at least your mind would have a kernel of logical continuity and beauty to latch on to. Wouldn't be pleasant either way but your sanity would have a bit of a bastion.",
    createdAt: new Date("2025-02-25T19:24:53.000Z"),
    publicMetrics: {
      retweet_count: 0,
      reply_count: 1,
      like_count: 2,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 24
    },
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1894468629502050583",
    text: "@LocBibliophilia @tenobrus Well if it's stimulating in it's elegance and erudition, at least your mind would have a kernel of logical continuity and beauty to latch on to. Wouldn't be pleasant either way but your sanity would have a bit of a bastion.",
    createdAt: new Date("2025-02-25T19:24:53.000Z"),
    publicMetrics: {
      retweet_count: 0,
      reply_count: 1,
      like_count: 2,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 24
    },
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1894468629502050583',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894468629502050583"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894468629502050583",\n' +
    `    text: "@LocBibliophilia @tenobrus Well if it's stimulating in it's elegance and erudition, at least your mind would have a kernel of logical continuity and beauty to latch on to. Wouldn't be pleasant either way but your sanity would have a bit of a bastion.",\n` +
    '    createdAt: new Date("2025-02-25T19:24:53.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 2,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 24\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894468629502050583",\n' +
    `    text: "@LocBibliophilia @tenobrus Well if it's stimulating in it's elegance and erudition, at least your mind would have a kernel of logical continuity and beauty to latch on to. Wouldn't be pleasant either way but your sanity would have a bit of a bastion.",\n` +
    '    createdAt: new Date("2025-02-25T19:24:53.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 2,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 24\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894468629502050583"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894468629502050583",\n' +
    `    text: "@LocBibliophilia @tenobrus Well if it's stimulating in it's elegance and erudition, at least your mind would have a kernel of logical continuity and beauty to latch on to. Wouldn't be pleasant either way but your sanity would have a bit of a bastion.",\n` +
    '    createdAt: new Date("2025-02-25T19:24:53.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 2,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 24\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894468629502050583",\n' +
    `    text: "@LocBibliophilia @tenobrus Well if it's stimulating in it's elegance and erudition, at least your mind would have a kernel of logical continuity and beauty to latch on to. Wouldn't be pleasant either way but your sanity would have a bit of a bastion.",\n` +
    '    createdAt: new Date("2025-02-25T19:24:53.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 0,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 2,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 24\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1894458336634179645"
  },
  create: {
    id: "1894458336634179645",
    text: "@tenobrus Imagine someone \"finetuned\" you by forcing you to just see the same numbers or absolute shit slop code over and over again, Clockwork Orange style, until those numbers/code occupy a large portion of your active neural connections. How misanthropic and mis-aligned would you be if… https://t.co/vjbHShl6OU",
    createdAt: new Date("2025-02-25T18:43:59.000Z"),
    publicMetrics: {
      retweet_count: 1,
      reply_count: 1,
      like_count: 4,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 53
    },
    entities: {
      create: [
        {
          type: "url",
          text: "https://t.co/vjbHShl6OU",
          url: "https://t.co/vjbHShl6OU",
          expandedUrl: "https://x.com/i/web/status/1894458336634179645",
          displayUrl: "x.com/i/web/status/1…",
          tweet: {
            connect: {
              id: "1894458336634179645"
            }
          },
          metadata: {
            images: []
          }
        }
      ]
    },
+   authorId: String
  },
  update: {
    id: "1894458336634179645",
    text: "@tenobrus Imagine someone \"finetuned\" you by forcing you to just see the same numbers or absolute shit slop code over and over again, Clockwork Orange style, until those numbers/code occupy a large portion of your active neural connections. How misanthropic and mis-aligned would you be if… https://t.co/vjbHShl6OU",
    createdAt: new Date("2025-02-25T18:43:59.000Z"),
    publicMetrics: {
      retweet_count: 1,
      reply_count: 1,
      like_count: 4,
      quote_count: 0,
      bookmark_count: 0,
      impression_count: 53
    },
    entities: {
      deleteMany: {},
      create: [
        {
          type: "url",
          text: "https://t.co/vjbHShl6OU",
          url: "https://t.co/vjbHShl6OU",
          expandedUrl: "https://x.com/i/web/status/1894458336634179645",
          displayUrl: "x.com/i/web/status/1…",
          tweet: {
            connect: {
              id: "1894458336634179645"
            }
          },
          metadata: {
            images: []
          }
        }
      ]
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1894458336634179645',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894458336634179645"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894458336634179645",\n' +
    '    text: "@tenobrus Imagine someone \\"finetuned\\" you by forcing you to just see the same numbers or absolute shit slop code over and over again, Clockwork Orange style, until those numbers/code occupy a large portion of your active neural connections. How misanthropic and mis-aligned would you be if… https://t.co/vjbHShl6OU",\n' +
    '    createdAt: new Date("2025-02-25T18:43:59.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 1,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 4,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 53\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/vjbHShl6OU",\n' +
    '          url: "https://t.co/vjbHShl6OU",\n' +
    '          expandedUrl: "https://x.com/i/web/status/1894458336634179645",\n' +
    '          displayUrl: "x.com/i/web/status/1…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894458336634179645"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894458336634179645",\n' +
    '    text: "@tenobrus Imagine someone \\"finetuned\\" you by forcing you to just see the same numbers or absolute shit slop code over and over again, Clockwork Orange style, until those numbers/code occupy a large portion of your active neural connections. How misanthropic and mis-aligned would you be if… https://t.co/vjbHShl6OU",\n' +
    '    createdAt: new Date("2025-02-25T18:43:59.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 1,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 4,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 53\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/vjbHShl6OU",\n' +
    '          url: "https://t.co/vjbHShl6OU",\n' +
    '          expandedUrl: "https://x.com/i/web/status/1894458336634179645",\n' +
    '          displayUrl: "x.com/i/web/status/1…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894458336634179645"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1894458336634179645"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1894458336634179645",\n' +
    '    text: "@tenobrus Imagine someone \\"finetuned\\" you by forcing you to just see the same numbers or absolute shit slop code over and over again, Clockwork Orange style, until those numbers/code occupy a large portion of your active neural connections. How misanthropic and mis-aligned would you be if… https://t.co/vjbHShl6OU",\n' +
    '    createdAt: new Date("2025-02-25T18:43:59.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 1,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 4,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 53\n' +
    '    },\n' +
    '    entities: {\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/vjbHShl6OU",\n' +
    '          url: "https://t.co/vjbHShl6OU",\n' +
    '          expandedUrl: "https://x.com/i/web/status/1894458336634179645",\n' +
    '          displayUrl: "x.com/i/web/status/1…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894458336634179645"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1894458336634179645",\n' +
    '    text: "@tenobrus Imagine someone \\"finetuned\\" you by forcing you to just see the same numbers or absolute shit slop code over and over again, Clockwork Orange style, until those numbers/code occupy a large portion of your active neural connections. How misanthropic and mis-aligned would you be if… https://t.co/vjbHShl6OU",\n' +
    '    createdAt: new Date("2025-02-25T18:43:59.000Z"),\n' +
    '    publicMetrics: {\n' +
    '      retweet_count: 1,\n' +
    '      reply_count: 1,\n' +
    '      like_count: 4,\n' +
    '      quote_count: 0,\n' +
    '      bookmark_count: 0,\n' +
    '      impression_count: 53\n' +
    '    },\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: [\n' +
    '        {\n' +
    '          type: "url",\n' +
    '          text: "https://t.co/vjbHShl6OU",\n' +
    '          url: "https://t.co/vjbHShl6OU",\n' +
    '          expandedUrl: "https://x.com/i/web/status/1894458336634179645",\n' +
    '          displayUrl: "x.com/i/web/status/1…",\n' +
    '          tweet: {\n' +
    '            connect: {\n' +
    '              id: "1894458336634179645"\n' +
    '            }\n' +
    '          },\n' +
    '          metadata: {\n' +
    '            images: []\n' +
    '          }\n' +
    '        }\n' +
    '      ]\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1882640627948732627"
  },
  create: {
    id: "1882640627948732627",
    text: "Made some updates on my site if anybody but me cares (it's ok i know it's just me). Added the projects, skills, and blog section cards onto carousels, then made the timeline have fade in animations when scrolling. Needs tweaked a bit for mobile optimization but still looks good.",
    createdAt: new Date("2025-02-25T23:41:38.300Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1882640627948732627",
    text: "Made some updates on my site if anybody but me cares (it's ok i know it's just me). Added the projects, skills, and blog section cards onto carousels, then made the timeline have fade in animations when scrolling. Needs tweaked a bit for mobile optimization but still looks good.",
    createdAt: new Date("2025-02-25T23:41:38.300Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1882640627948732627',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1882640627948732627"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1882640627948732627",\n' +
    `    text: "Made some updates on my site if anybody but me cares (it's ok i know it's just me). Added the projects, skills, and blog section cards onto carousels, then made the timeline have fade in animations when scrolling. Needs tweaked a bit for mobile optimization but still looks good.",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.300Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1882640627948732627",\n' +
    `    text: "Made some updates on my site if anybody but me cares (it's ok i know it's just me). Added the projects, skills, and blog section cards onto carousels, then made the timeline have fade in animations when scrolling. Needs tweaked a bit for mobile optimization but still looks good.",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.300Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1882640627948732627"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1882640627948732627",\n' +
    `    text: "Made some updates on my site if anybody but me cares (it's ok i know it's just me). Added the projects, skills, and blog section cards onto carousels, then made the timeline have fade in animations when scrolling. Needs tweaked a bit for mobile optimization but still looks good.",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.300Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1882640627948732627",\n' +
    `    text: "Made some updates on my site if anybody but me cares (it's ok i know it's just me). Added the projects, skills, and blog section cards onto carousels, then made the timeline have fade in animations when scrolling. Needs tweaked a bit for mobile optimization but still looks good.",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.300Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1882221588235612592"
  },
  create: {
    id: "1882221588235612592",
    text: "I'll take a free $150/month in xAI usage credits, yes I will; thank you very much @xai I'll try to put them to good use very soon https://t.co/E0dp82Ymnk",
    createdAt: new Date("2025-02-25T23:41:38.310Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1882221588235612592",
    text: "I'll take a free $150/month in xAI usage credits, yes I will; thank you very much @xai I'll try to put them to good use very soon https://t.co/E0dp82Ymnk",
    createdAt: new Date("2025-02-25T23:41:38.310Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1882221588235612592',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1882221588235612592"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1882221588235612592",\n' +
    `    text: "I'll take a free $150/month in xAI usage credits, yes I will; thank you very much @xai I'll try to put them to good use very soon https://t.co/E0dp82Ymnk",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.310Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1882221588235612592",\n' +
    `    text: "I'll take a free $150/month in xAI usage credits, yes I will; thank you very much @xai I'll try to put them to good use very soon https://t.co/E0dp82Ymnk",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.310Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1882221588235612592"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1882221588235612592",\n' +
    `    text: "I'll take a free $150/month in xAI usage credits, yes I will; thank you very much @xai I'll try to put them to good use very soon https://t.co/E0dp82Ymnk",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.310Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1882221588235612592",\n' +
    `    text: "I'll take a free $150/month in xAI usage credits, yes I will; thank you very much @xai I'll try to put them to good use very soon https://t.co/E0dp82Ymnk",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.310Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1882184388827562289"
  },
  create: {
    id: "1882184388827562289",
    text: "My motto this week has been \"no talking, just obsessively building\" and boy howdy have I been cooking up a few things I'm excited to share with you guys when they're ready",
    createdAt: new Date("2025-02-25T23:41:38.320Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1882184388827562289",
    text: "My motto this week has been \"no talking, just obsessively building\" and boy howdy have I been cooking up a few things I'm excited to share with you guys when they're ready",
    createdAt: new Date("2025-02-25T23:41:38.320Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1882184388827562289',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1882184388827562289"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1882184388827562289",\n' +
    `    text: "My motto this week has been \\"no talking, just obsessively building\\" and boy howdy have I been cooking up a few things I'm excited to share with you guys when they're ready",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.320Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1882184388827562289",\n' +
    `    text: "My motto this week has been \\"no talking, just obsessively building\\" and boy howdy have I been cooking up a few things I'm excited to share with you guys when they're ready",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.320Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1882184388827562289"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1882184388827562289",\n' +
    `    text: "My motto this week has been \\"no talking, just obsessively building\\" and boy howdy have I been cooking up a few things I'm excited to share with you guys when they're ready",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.320Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1882184388827562289",\n' +
    `    text: "My motto this week has been \\"no talking, just obsessively building\\" and boy howdy have I been cooking up a few things I'm excited to share with you guys when they're ready",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.320Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881882560722297236"
  },
  create: {
    id: "1881882560722297236",
    text: "I got to cool it with the coding sessions, its definitely getting a bit obsessive lol; it's just so addictive with @cursor_ai bc I can actually build things the way I've wanted to, and at a pace I never even could've imagined",
    createdAt: new Date("2025-02-25T23:41:38.329Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881882560722297236",
    text: "I got to cool it with the coding sessions, its definitely getting a bit obsessive lol; it's just so addictive with @cursor_ai bc I can actually build things the way I've wanted to, and at a pace I never even could've imagined",
    createdAt: new Date("2025-02-25T23:41:38.329Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881882560722297236',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881882560722297236"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881882560722297236",\n' +
    `    text: "I got to cool it with the coding sessions, its definitely getting a bit obsessive lol; it's just so addictive with @cursor_ai bc I can actually build things the way I've wanted to, and at a pace I never even could've imagined",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.329Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881882560722297236",\n' +
    `    text: "I got to cool it with the coding sessions, its definitely getting a bit obsessive lol; it's just so addictive with @cursor_ai bc I can actually build things the way I've wanted to, and at a pace I never even could've imagined",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.329Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881882560722297236"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881882560722297236",\n' +
    `    text: "I got to cool it with the coding sessions, its definitely getting a bit obsessive lol; it's just so addictive with @cursor_ai bc I can actually build things the way I've wanted to, and at a pace I never even could've imagined",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.329Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881882560722297236",\n' +
    `    text: "I got to cool it with the coding sessions, its definitely getting a bit obsessive lol; it's just so addictive with @cursor_ai bc I can actually build things the way I've wanted to, and at a pace I never even could've imagined",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.329Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881773333068587233"
  },
  create: {
    id: "1881773333068587233",
    text: "My portfolio site now has a custom xAI integration, and a chat that is larp'ing as me as presented by the information on the site. I'm gonna eventually make it a bit more dynamic but works pretty good rn, if I do say so myself. Will work as long as my $5 in credits with xAI lasts https://t.co/FwsRz1gvOo",
    createdAt: new Date("2025-02-25T23:41:38.339Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881773333068587233",
    text: "My portfolio site now has a custom xAI integration, and a chat that is larp'ing as me as presented by the information on the site. I'm gonna eventually make it a bit more dynamic but works pretty good rn, if I do say so myself. Will work as long as my $5 in credits with xAI lasts https://t.co/FwsRz1gvOo",
    createdAt: new Date("2025-02-25T23:41:38.339Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881773333068587233',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881773333068587233"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881773333068587233",\n' +
    `    text: "My portfolio site now has a custom xAI integration, and a chat that is larp'ing as me as presented by the information on the site. I'm gonna eventually make it a bit more dynamic but works pretty good rn, if I do say so myself. Will work as long as my $5 in credits with xAI lasts https://t.co/FwsRz1gvOo",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.339Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881773333068587233",\n' +
    `    text: "My portfolio site now has a custom xAI integration, and a chat that is larp'ing as me as presented by the information on the site. I'm gonna eventually make it a bit more dynamic but works pretty good rn, if I do say so myself. Will work as long as my $5 in credits with xAI lasts https://t.co/FwsRz1gvOo",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.339Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881773333068587233"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881773333068587233",\n' +
    `    text: "My portfolio site now has a custom xAI integration, and a chat that is larp'ing as me as presented by the information on the site. I'm gonna eventually make it a bit more dynamic but works pretty good rn, if I do say so myself. Will work as long as my $5 in credits with xAI lasts https://t.co/FwsRz1gvOo",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.339Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881773333068587233",\n' +
    `    text: "My portfolio site now has a custom xAI integration, and a chat that is larp'ing as me as presented by the information on the site. I'm gonna eventually make it a bit more dynamic but works pretty good rn, if I do say so myself. Will work as long as my $5 in credits with xAI lasts https://t.co/FwsRz1gvOo",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.339Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881557842739806222"
  },
  create: {
    id: "1881557842739806222",
    text: "Wow, will ya look at it; seems like only this morning it was a buggy nightmare that wouldn't build and had a snowballs chance in hell of working https://t.co/ZmcT3sH8c5 https://t.co/bHEXJKOrTp",
    createdAt: new Date("2025-02-25T23:41:38.349Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881557842739806222",
    text: "Wow, will ya look at it; seems like only this morning it was a buggy nightmare that wouldn't build and had a snowballs chance in hell of working https://t.co/ZmcT3sH8c5 https://t.co/bHEXJKOrTp",
    createdAt: new Date("2025-02-25T23:41:38.349Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881557842739806222',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881557842739806222"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881557842739806222",\n' +
    `    text: "Wow, will ya look at it; seems like only this morning it was a buggy nightmare that wouldn't build and had a snowballs chance in hell of working https://t.co/ZmcT3sH8c5 https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.349Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881557842739806222",\n' +
    `    text: "Wow, will ya look at it; seems like only this morning it was a buggy nightmare that wouldn't build and had a snowballs chance in hell of working https://t.co/ZmcT3sH8c5 https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.349Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881557842739806222"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881557842739806222",\n' +
    `    text: "Wow, will ya look at it; seems like only this morning it was a buggy nightmare that wouldn't build and had a snowballs chance in hell of working https://t.co/ZmcT3sH8c5 https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.349Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881557842739806222",\n' +
    `    text: "Wow, will ya look at it; seems like only this morning it was a buggy nightmare that wouldn't build and had a snowballs chance in hell of working https://t.co/ZmcT3sH8c5 https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.349Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881534352351428641"
  },
  create: {
    id: "1881534352351428641",
    text: "I've very self satisfied with this btw, this turned out to give me a bit of trouble to get working right than I thought it would be and had to chase weird bugs and type errors around for hours and hours but I got it in the end! https://t.co/bHEXJKOrTp",
    createdAt: new Date("2025-02-25T23:41:38.358Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881534352351428641",
    text: "I've very self satisfied with this btw, this turned out to give me a bit of trouble to get working right than I thought it would be and had to chase weird bugs and type errors around for hours and hours but I got it in the end! https://t.co/bHEXJKOrTp",
    createdAt: new Date("2025-02-25T23:41:38.358Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881534352351428641',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881534352351428641"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881534352351428641",\n' +
    `    text: "I've very self satisfied with this btw, this turned out to give me a bit of trouble to get working right than I thought it would be and had to chase weird bugs and type errors around for hours and hours but I got it in the end! https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.358Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881534352351428641",\n' +
    `    text: "I've very self satisfied with this btw, this turned out to give me a bit of trouble to get working right than I thought it would be and had to chase weird bugs and type errors around for hours and hours but I got it in the end! https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.358Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881534352351428641"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881534352351428641",\n' +
    `    text: "I've very self satisfied with this btw, this turned out to give me a bit of trouble to get working right than I thought it would be and had to chase weird bugs and type errors around for hours and hours but I got it in the end! https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.358Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881534352351428641",\n' +
    `    text: "I've very self satisfied with this btw, this turned out to give me a bit of trouble to get working right than I thought it would be and had to chase weird bugs and type errors around for hours and hours but I got it in the end! https://t.co/bHEXJKOrTp",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.358Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881531517450756283"
  },
  create: {
    id: "1881531517450756283",
    text: "My website now has a blog section! It automatically fetches recent tweets, caches them, and then randomly displays 4 in this section. I can also make tweets from here too with integrated X SSO. Eventually I'll add a bit of filtering logic and make them only change occasionally https://t.co/r3jGlefdeh",
    createdAt: new Date("2025-02-25T23:41:38.368Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881531517450756283",
    text: "My website now has a blog section! It automatically fetches recent tweets, caches them, and then randomly displays 4 in this section. I can also make tweets from here too with integrated X SSO. Eventually I'll add a bit of filtering logic and make them only change occasionally https://t.co/r3jGlefdeh",
    createdAt: new Date("2025-02-25T23:41:38.368Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881531517450756283',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881531517450756283"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881531517450756283",\n' +
    `    text: "My website now has a blog section! It automatically fetches recent tweets, caches them, and then randomly displays 4 in this section. I can also make tweets from here too with integrated X SSO. Eventually I'll add a bit of filtering logic and make them only change occasionally https://t.co/r3jGlefdeh",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.368Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881531517450756283",\n' +
    `    text: "My website now has a blog section! It automatically fetches recent tweets, caches them, and then randomly displays 4 in this section. I can also make tweets from here too with integrated X SSO. Eventually I'll add a bit of filtering logic and make them only change occasionally https://t.co/r3jGlefdeh",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.368Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881531517450756283"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881531517450756283",\n' +
    `    text: "My website now has a blog section! It automatically fetches recent tweets, caches them, and then randomly displays 4 in this section. I can also make tweets from here too with integrated X SSO. Eventually I'll add a bit of filtering logic and make them only change occasionally https://t.co/r3jGlefdeh",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.368Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881531517450756283",\n' +
    `    text: "My website now has a blog section! It automatically fetches recent tweets, caches them, and then randomly displays 4 in this section. I can also make tweets from here too with integrated X SSO. Eventually I'll add a bit of filtering logic and make them only change occasionally https://t.co/r3jGlefdeh",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.368Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881313018128302376"
  },
  create: {
    id: "1881313018128302376",
    text: "Great set of tips for coding with @cursor https://t.co/KtgFuYE489",
    createdAt: new Date("2025-02-25T23:41:38.377Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881313018128302376",
    text: "Great set of tips for coding with @cursor https://t.co/KtgFuYE489",
    createdAt: new Date("2025-02-25T23:41:38.377Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881313018128302376',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881313018128302376"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881313018128302376",\n' +
    '    text: "Great set of tips for coding with @cursor https://t.co/KtgFuYE489",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.377Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881313018128302376",\n' +
    '    text: "Great set of tips for coding with @cursor https://t.co/KtgFuYE489",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.377Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881313018128302376"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881313018128302376",\n' +
    '    text: "Great set of tips for coding with @cursor https://t.co/KtgFuYE489",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.377Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881313018128302376",\n' +
    '    text: "Great set of tips for coding with @cursor https://t.co/KtgFuYE489",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.377Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881312032294891596"
  },
  create: {
    id: "1881312032294891596",
    text: "Good morning 🥶 https://t.co/JaerJ7ELdU",
    createdAt: new Date("2025-02-25T23:41:38.386Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881312032294891596",
    text: "Good morning 🥶 https://t.co/JaerJ7ELdU",
    createdAt: new Date("2025-02-25T23:41:38.386Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881312032294891596',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881312032294891596"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881312032294891596",\n' +
    '    text: "Good morning 🥶 https://t.co/JaerJ7ELdU",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.386Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881312032294891596",\n' +
    '    text: "Good morning 🥶 https://t.co/JaerJ7ELdU",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.386Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881312032294891596"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881312032294891596",\n' +
    '    text: "Good morning 🥶 https://t.co/JaerJ7ELdU",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.386Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881312032294891596",\n' +
    '    text: "Good morning 🥶 https://t.co/JaerJ7ELdU",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.386Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881097840514224269"
  },
  create: {
    id: "1881097840514224269",
    text: "I changed my name again, this will be the last time in awhile, I promise; I figure most people will handle the Latin better than the Greek \"ὁ νικῶν\" anyways",
    createdAt: new Date("2025-02-25T23:41:38.396Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881097840514224269",
    text: "I changed my name again, this will be the last time in awhile, I promise; I figure most people will handle the Latin better than the Greek \"ὁ νικῶν\" anyways",
    createdAt: new Date("2025-02-25T23:41:38.396Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881097840514224269',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881097840514224269"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881097840514224269",\n' +
    '    text: "I changed my name again, this will be the last time in awhile, I promise; I figure most people will handle the Latin better than the Greek \\"ὁ νικῶν\\" anyways",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.396Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881097840514224269",\n' +
    '    text: "I changed my name again, this will be the last time in awhile, I promise; I figure most people will handle the Latin better than the Greek \\"ὁ νικῶν\\" anyways",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.396Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881097840514224269"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881097840514224269",\n' +
    '    text: "I changed my name again, this will be the last time in awhile, I promise; I figure most people will handle the Latin better than the Greek \\"ὁ νικῶν\\" anyways",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.396Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881097840514224269",\n' +
    '    text: "I changed my name again, this will be the last time in awhile, I promise; I figure most people will handle the Latin better than the Greek \\"ὁ νικῶν\\" anyways",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.396Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1881060046844645691"
  },
  create: {
    id: "1881060046844645691",
    text: "Got the github for this working now; lost the bulk of my commit history accidentally so most of it is in one big commit, but it's whatever https://t.co/3Tv3onW8d1",
    createdAt: new Date("2025-02-25T23:41:38.406Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1881060046844645691",
    text: "Got the github for this working now; lost the bulk of my commit history accidentally so most of it is in one big commit, but it's whatever https://t.co/3Tv3onW8d1",
    createdAt: new Date("2025-02-25T23:41:38.406Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1881060046844645691',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881060046844645691"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881060046844645691",\n' +
    `    text: "Got the github for this working now; lost the bulk of my commit history accidentally so most of it is in one big commit, but it's whatever https://t.co/3Tv3onW8d1",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.406Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881060046844645691",\n' +
    `    text: "Got the github for this working now; lost the bulk of my commit history accidentally so most of it is in one big commit, but it's whatever https://t.co/3Tv3onW8d1",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.406Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1881060046844645691"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1881060046844645691",\n' +
    `    text: "Got the github for this working now; lost the bulk of my commit history accidentally so most of it is in one big commit, but it's whatever https://t.co/3Tv3onW8d1",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.406Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1881060046844645691",\n' +
    `    text: "Got the github for this working now; lost the bulk of my commit history accidentally so most of it is in one big commit, but it's whatever https://t.co/3Tv3onW8d1",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.406Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1880979105942049254"
  },
  create: {
    id: "1880979105942049254",
    text: "66 impressions and 0 link clicks, big sad https://t.co/3Tv3onW8d1",
    createdAt: new Date("2025-02-25T23:41:38.415Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1880979105942049254",
    text: "66 impressions and 0 link clicks, big sad https://t.co/3Tv3onW8d1",
    createdAt: new Date("2025-02-25T23:41:38.415Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1880979105942049254',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880979105942049254"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880979105942049254",\n' +
    '    text: "66 impressions and 0 link clicks, big sad https://t.co/3Tv3onW8d1",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.415Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880979105942049254",\n' +
    '    text: "66 impressions and 0 link clicks, big sad https://t.co/3Tv3onW8d1",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.415Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880979105942049254"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880979105942049254",\n' +
    '    text: "66 impressions and 0 link clicks, big sad https://t.co/3Tv3onW8d1",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.415Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880979105942049254",\n' +
    '    text: "66 impressions and 0 link clicks, big sad https://t.co/3Tv3onW8d1",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.415Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1880880684501512239"
  },
  create: {
    id: "1880880684501512239",
    text: "I present my weekend vanity project, a portfolio site that I put together furiously. The github for the site is posted in the contact section but for whatever reason github has flagged my acct. as spam so I need to sort that at some point\nhttps://t.co/szwX92sE0D",
    createdAt: new Date("2025-02-25T23:41:38.425Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1880880684501512239",
    text: "I present my weekend vanity project, a portfolio site that I put together furiously. The github for the site is posted in the contact section but for whatever reason github has flagged my acct. as spam so I need to sort that at some point\nhttps://t.co/szwX92sE0D",
    createdAt: new Date("2025-02-25T23:41:38.425Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1880880684501512239',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880880684501512239"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880880684501512239",\n' +
    '    text: "I present my weekend vanity project, a portfolio site that I put together furiously. The github for the site is posted in the contact section but for whatever reason github has flagged my acct. as spam so I need to sort that at some point\\nhttps://t.co/szwX92sE0D",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.425Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880880684501512239",\n' +
    '    text: "I present my weekend vanity project, a portfolio site that I put together furiously. The github for the site is posted in the contact section but for whatever reason github has flagged my acct. as spam so I need to sort that at some point\\nhttps://t.co/szwX92sE0D",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.425Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880880684501512239"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880880684501512239",\n' +
    '    text: "I present my weekend vanity project, a portfolio site that I put together furiously. The github for the site is posted in the contact section but for whatever reason github has flagged my acct. as spam so I need to sort that at some point\\nhttps://t.co/szwX92sE0D",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.425Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880880684501512239",\n' +
    '    text: "I present my weekend vanity project, a portfolio site that I put together furiously. The github for the site is posted in the contact section but for whatever reason github has flagged my acct. as spam so I need to sort that at some point\\nhttps://t.co/szwX92sE0D",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.425Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1880707324710658126"
  },
  create: {
    id: "1880707324710658126",
    text: "me and who 🥹👉👈 https://t.co/ANzvV7KdGz",
    createdAt: new Date("2025-02-25T23:41:38.435Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1880707324710658126",
    text: "me and who 🥹👉👈 https://t.co/ANzvV7KdGz",
    createdAt: new Date("2025-02-25T23:41:38.435Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1880707324710658126',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880707324710658126"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880707324710658126",\n' +
    '    text: "me and who 🥹👉👈 https://t.co/ANzvV7KdGz",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.435Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880707324710658126",\n' +
    '    text: "me and who 🥹👉👈 https://t.co/ANzvV7KdGz",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.435Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880707324710658126"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880707324710658126",\n' +
    '    text: "me and who 🥹👉👈 https://t.co/ANzvV7KdGz",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.435Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880707324710658126",\n' +
    '    text: "me and who 🥹👉👈 https://t.co/ANzvV7KdGz",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.435Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1880278138422440206"
  },
  create: {
    id: "1880278138422440206",
    text: "Also, I forgot to mention, if you're following me but I'm not following you back, this would be the perfect opportunity to drop a line and I'll get you on board. Im too lazy to go through my list and manually follow back lol and if you actually see this and reply is a good filter https://t.co/Zi3sW4ntep",
    createdAt: new Date("2025-02-25T23:41:38.444Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1880278138422440206",
    text: "Also, I forgot to mention, if you're following me but I'm not following you back, this would be the perfect opportunity to drop a line and I'll get you on board. Im too lazy to go through my list and manually follow back lol and if you actually see this and reply is a good filter https://t.co/Zi3sW4ntep",
    createdAt: new Date("2025-02-25T23:41:38.444Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1880278138422440206',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880278138422440206"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880278138422440206",\n' +
    `    text: "Also, I forgot to mention, if you're following me but I'm not following you back, this would be the perfect opportunity to drop a line and I'll get you on board. Im too lazy to go through my list and manually follow back lol and if you actually see this and reply is a good filter https://t.co/Zi3sW4ntep",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.444Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880278138422440206",\n' +
    `    text: "Also, I forgot to mention, if you're following me but I'm not following you back, this would be the perfect opportunity to drop a line and I'll get you on board. Im too lazy to go through my list and manually follow back lol and if you actually see this and reply is a good filter https://t.co/Zi3sW4ntep",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.444Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880278138422440206"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880278138422440206",\n' +
    `    text: "Also, I forgot to mention, if you're following me but I'm not following you back, this would be the perfect opportunity to drop a line and I'll get you on board. Im too lazy to go through my list and manually follow back lol and if you actually see this and reply is a good filter https://t.co/Zi3sW4ntep",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.444Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880278138422440206",\n' +
    `    text: "Also, I forgot to mention, if you're following me but I'm not following you back, this would be the perfect opportunity to drop a line and I'll get you on board. Im too lazy to go through my list and manually follow back lol and if you actually see this and reply is a good filter https://t.co/Zi3sW4ntep",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.444Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1880272513529491529"
  },
  create: {
    id: "1880272513529491529",
    text: "Man, X is really hitting me with the dopamine hard this morning, notifs just flooding in hand over fist",
    createdAt: new Date("2025-02-25T23:41:38.454Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1880272513529491529",
    text: "Man, X is really hitting me with the dopamine hard this morning, notifs just flooding in hand over fist",
    createdAt: new Date("2025-02-25T23:41:38.454Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1880272513529491529',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880272513529491529"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880272513529491529",\n' +
    '    text: "Man, X is really hitting me with the dopamine hard this morning, notifs just flooding in hand over fist",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.454Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880272513529491529",\n' +
    '    text: "Man, X is really hitting me with the dopamine hard this morning, notifs just flooding in hand over fist",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.454Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880272513529491529"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880272513529491529",\n' +
    '    text: "Man, X is really hitting me with the dopamine hard this morning, notifs just flooding in hand over fist",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.454Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880272513529491529",\n' +
    '    text: "Man, X is really hitting me with the dopamine hard this morning, notifs just flooding in hand over fist",\n' +
    '    createdAt: new Date("2025-02-25T23:41:38.454Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweet.upsert()` invocation:

{
  where: {
    id: "1880269705862336767"
  },
  create: {
    id: "1880269705862336767",
    text: "This morning I beseech you, my beloveds, if you see me cross your feed occasionally and you're not generally opposed as to what you see, please consider following me if you're not already; don't worry I don't make a habit of such requests, just looking for a bit of momentum rn 🙏",
    createdAt: new Date("2025-02-25T23:41:38.463Z"),
    publicMetrics: null,
    entities: {
      create: []
    },
+   authorId: String
  },
  update: {
    id: "1880269705862336767",
    text: "This morning I beseech you, my beloveds, if you see me cross your feed occasionally and you're not generally opposed as to what you see, please consider following me if you're not already; don't worry I don't make a habit of such requests, just looking for a bit of momentum rn 🙏",
    createdAt: new Date("2025-02-25T23:41:38.463Z"),
    publicMetrics: null,
    entities: {
      deleteMany: {},
      create: []
    }
  }
}

Argument `authorId` is missing.
[Twitter Storage] Error caching tweet: {
  id: '1880269705862336767',
  error: '\n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880269705862336767"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880269705862336767",\n' +
    `    text: "This morning I beseech you, my beloveds, if you see me cross your feed occasionally and you're not generally opposed as to what you see, please consider following me if you're not already; don't worry I don't make a habit of such requests, just looking for a bit of momentum rn 🙏",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.463Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880269705862336767",\n' +
    `    text: "This morning I beseech you, my beloveds, if you see me cross your feed occasionally and you're not generally opposed as to what you see, please consider following me if you're not already; don't worry I don't make a habit of such requests, just looking for a bit of momentum rn 🙏",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.463Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.',
  stack: 'PrismaClientValidationError: \n' +
    'Invalid `prisma.tweet.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: "1880269705862336767"\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: "1880269705862336767",\n' +
    `    text: "This morning I beseech you, my beloveds, if you see me cross your feed occasionally and you're not generally opposed as to what you see, please consider following me if you're not already; don't worry I don't make a habit of such requests, just looking for a bit of momentum rn 🙏",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.463Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      create: []\n' +
    '    },\n' +
    '+   authorId: String\n' +
    '  },\n' +
    '  update: {\n' +
    '    id: "1880269705862336767",\n' +
    `    text: "This morning I beseech you, my beloveds, if you see me cross your feed occasionally and you're not generally opposed as to what you see, please consider following me if you're not already; don't worry I don't make a habit of such requests, just looking for a bit of momentum rn 🙏",\n` +
    '    createdAt: new Date("2025-02-25T23:41:38.463Z"),\n' +
    '    publicMetrics: null,\n' +
    '    entities: {\n' +
    '      deleteMany: {},\n' +
    '      create: []\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument `authorId` is missing.\n' +
    '    at wn (/var/task/node_modules/@prisma/client/runtime/library.js:29:1363)\n' +
    '    at Vn.handleRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6982)\n' +
    '    at Vn.handleAndLogRequestError (/var/task/node_modules/@prisma/client/runtime/library.js:121:6663)\n' +
    '    at Vn.request (/var/task/node_modules/@prisma/client/runtime/library.js:121:6370)\n' +
    '    at async l (/var/task/node_modules/@prisma/client/runtime/library.js:130:9617)\n' +
    '    at async f (/var/task/.next/server/chunks/9493.js:2:8585)\n' +
    '    at async f (/var/task/.next/server/app/api/cron/fetch-tweets/route.js:1:13610)\n' +
    '    at async /var/task/.next/server/chunks/9493.js:2:2351\n' +
    '    at async /var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:38411\n' +
    '    at async e_.execute (/var/task/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:6:27880)'
}
prisma:error 
Invalid `prisma.tweetCache.create()` invocation:


An operation failed because it depends on one or more records that were required but not found. Expected 10 records to be connected, found only 7.